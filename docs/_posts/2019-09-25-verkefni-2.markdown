---
layout: post
title:  "Verkefni 2"
date:   2019-09-25 12:00:00 +0000
categories: verkefni
---
## Verkefnalýsing

Verkefni 2 er þríþætt. Fyrstu tveir hlutarnir ganga út á að keyra fram og til baka ákveðnar vegalengdir (hækkar alltaf um 0,5 m í hvert skipti) fram og til baka þar til komið er í 2,5 m. Fyrri hlutinn keyrir í ákveðinn tíma og áætlar þannig vegalengdina en seinni hlutinn notar shaft encoders til að keyra ákveðna vegalengd og rétta sig af. Síðasti hlutinn gengur síðan út á að fylgja ákveðnu mynstri.

### 1. hluti

Í þessum hluta átti vélmennið að keyra fram og aftur miðað við tíma.

#### Flæðirit

![Flæðirit fyrir 1. hluta verkefnis 2]({{ baseurl }}/assets/img/verkefni2/part1/flowchart.png)

#### Kóði

```c
#pragma config(Motor,  port2,           rightMotor,    tmotorServoContinuousRotation, openLoop)
#pragma config(Motor,  port3,           leftMotor,     tmotorServoContinuousRotation, openLoop, reversed)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

/*----------------------------------------------------------------------------------------------------*\
|*                                            - Suicide -                                             *|
|*                                                                                                    *|
|*  This program instructs the robot to move forward at full power for 0.5 meters and then back       *|
|*  0.5 meters. This is repeated, increasing the distance 0.5 m every time until 2.5 m is reached.    *|
|*                                                                                                    *|
\*-----------------------------------------------------------------------------------------------4246-*/

#include "headers/motor.h"
#include "functions/motor.inc"

#define WAIT_TIME 500

//+++++++++++++++++++++++++++++++++++++++++++++| MAIN |+++++++++++++++++++++++++++++++++++++++++++++++
task main()
{
	wait1Msec(2000);
	for (int i = 0; i <= 5; i++) {
		driveFor(i * BASE_TIME, true);  // forwards
		stopMotors();
		wait1Msec(WAIT_TIME);
		driveFor(i * BASE_TIME, false); // backwards
		stopMotors();
		wait1Msec(WAIT_TIME);
	}
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
```

#### Myndband

{% include youtube.html id='lqGAdrQ0XjE' %}

### 2. hluti

Í þessum hluta átti vélmennið að gera það sama og í 1. hluta nema hvað notast var við snúninga á shaft encoders til að keyra rétta vegalengd í stað tíma.

#### Flæðirit

![Flæðirit fyrir 2. hluta verkefnis 2]({{ baseurl }}/assets/img/verkefni2/part2/flowchart.png)

#### Kóði

```c
#pragma config(Sensor, dgtl3,  rightEncoder,   sensorQuadEncoder)
#pragma config(Sensor, dgtl5,  leftEncoder,    sensorQuadEncoder)
#pragma config(Motor,  port2,           rightMotor,    tmotorServoContinuousRotation, openLoop)
#pragma config(Motor,  port3,           leftMotor,     tmotorServoContinuousRotation, openLoop, reversed)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

/*----------------------------------------------------------------------------------------------------*\
|*                                     - Verkefni 2 - 2. hluti -                                      *|
|*                                                                                                    *|
|*  This program instructs the robot to move forward for 0.5 meters, using the shaft encoders,        *|
|*  and then back 0.5 meters. The robot is automatically straightened by dynamically changing power.  *|
|*  This is repeated, increasing the distance 0.5 m every time until 2.5 m is reached.                *|
|*
|*                                      - Wheel Circumference -                                       *|
|*  The wheels on the robot have a radius of 5.2 cm each. Circumference is equal to 2 * r * pi,       *|
|*  which equals about 32.67 cm.                                                                      *| 
|*                                                                                                    *|
\*-----------------------------------------------------------------------------------------------4246-*/

#include "headers/motor.h"
#include "functions/motor.inc"
#include "headers/encoders.h"
#include "functions/encoders.inc"

#define NORMAL_SPEED 80
#define SLOWER_SPEED 60
#define WAIT_TIME 1000

//+++++++++++++++++++++++++++++++++++++++++++++| MAIN |+++++++++++++++++++++++++++++++++++++++++++++++
task main()
{
	wait1Msec(2000);							// Robot waits for 2000 milliseconds before executing program

	for (int i = 0; i <= 5; i++) {
		driveForDistance(i * BASE_DIST, true, NORMAL_SPEED, SLOWER_SPEED);  // forwards
		stopMotors();
		wait1Msec(WAIT_TIME);
		driveForDistance(i * BASE_DIST, false, NORMAL_SPEED, SLOWER_SPEED); // backwards
		stopMotors();
		wait1Msec(WAIT_TIME);
	}
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
```

#### Myndband

{% include youtube.html id='2JQCyHk9yn8' %}

### 3. hluti

Í 3. hlutanum átti vélmennið að keyra eftir eftirfarandi mynstri.

![Mynstur 3. hluta verkefnis 2]({{ baseurl }}/assets/img/verkefni2/part3/path.png)

#### Flæðirit

![Flæðirit fyrir 2. hluta verkefnis 2]({{ baseurl }}/assets/img/verkefni2/part3/flowchart.png)

#### Kóði

```c
#pragma config(Sensor, dgtl3,  rightEncoder,   sensorQuadEncoder)
#pragma config(Sensor, dgtl5,  leftEncoder,    sensorQuadEncoder)
#pragma config(Motor,  port2,           rightMotor,    tmotorServoContinuousRotation, openLoop)
#pragma config(Motor,  port3,           leftMotor,     tmotorServoContinuousRotation, openLoop, reversed)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

/*----------------------------------------------------------------------------------------------------*\
|*                                     - Verkefni 2 - 3. hluti -                                      *|
|*                                                                                                    *|
|*  This program instructs the robot to move forward for 0.5 meters at a time, 15 times, and turn in  *|
|*  different, predetermined directions in between to solve a specific problem.                       *|
|*                                                                                                    *|
\*-----------------------------------------------------------------------------------------------4246-*/

#include "headers/motor.h"
#include "functions/motor.inc"
#include "headers/encoders.h"
#include "functions/encoders.inc"

#define NORMAL_SPEED 80
#define SLOWER_SPEED 60
#define WAIT_TIME 1000

#define RIGHT true
#define LEFT false

// Directions to turn in (in order)
short turns[15] = {
	RIGHT,
	LEFT,
	LEFT,
	RIGHT,
	RIGHT,
	LEFT,
	RIGHT,
	RIGHT,
	LEFT,
	RIGHT,
	RIGHT,
	LEFT,
	LEFT,
	RIGHT,
	-1  // Do not turn in the end
};

//+++++++++++++++++++++++++++++++++++++++++++++| MAIN |+++++++++++++++++++++++++++++++++++++++++++++++
task main()
{
	const float TURN_DEG = BASE_TURN * 90.0 / 360.0;
	wait1Msec(2000);							// Robot waits for 2000 milliseconds before executing program
	for (int i = 0; i < 15; i++) {
		// writeDebugStream("Round %d: ", i);
		driveForDistance(BASE_DIST, true, NORMAL_SPEED, SLOWER_SPEED);  // forwards
		stopMotors();
		// writeDebugStream("Finished moving. ");
		wait1Msec(WAIT_TIME);
		// -1 in turns array means don't turn
		if (turns[i] != -1) {
			// writeDebugStreamLine("Turning %d in direction %d.", TURN_DEG, turns[i]);
			turn(TURN_DEG, turns[i]);
		}
	}
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
```

#### Myndband

{% include youtube.html id='fpfQkWUJEsE' %}
