---
layout: post
title:  "Verkefni 6"
date:   2019-12-06 23:00:00 +0000  # TODO: Replace with date of publishing (also rename file)
categories: verkefni
---
## Verkefnalýsing

### Upprunaleg verkefnalýsing

Verkefni 6 gengur út á að nota þrjá line sensors undir vélmenninu til að fylgja línu, en eftir ákveðnum leiðum í þetta sinn. Vélmennið á að ná í fjögur glös og skila þeim í körfu.

### Einfölduð verkefnalýsing

Verkefni 6 gengur út á að nota þrjá line sensors undir vélmenninu til að fylgja línu. Þegar komið er á enda línunnar á vélmennið að grípa glas með klónni, snúa við og skila glasinu aftur þangað sem það byrjaði. Þrautin var einfölduð frá því sem áður var vegna mikilla erfiðleika nemenda við að leysa það sökum óútskýrðrar, mögulega aldurstengdrar eða aðstæðutengdrar slæmrar hegðunar vélmennanna.

### Teikning (upprunalegt verkefni)

![Teikning af verkefni 6]({{ site.baseurl }}/assets/img/verkefni6/paths.png)

## Flæðirit (upprunalegt verkefni)

![Flæðirit fyrir verkefni 6]({{ site.baseurl }}/assets/img/verkefni6/flowchart.png)

## Kóði

```c
#pragma config(Sensor, in2,    potentiometer,  sensorPotentiometer)
#pragma config(Sensor, in3,    gyro,           sensorGyro)
#pragma config(Sensor, in4,    lineFollowerRIGHT, sensorLineFollower)
#pragma config(Sensor, in5,    lineFollowerCENTER, sensorLineFollower)
#pragma config(Sensor, in6,    lineFollowerLEFT, sensorLineFollower)
#pragma config(Sensor, dgtl1,  touchSensor,    sensorTouch)
#pragma config(Sensor, dgtl7,  sonar,          sensorSONAR_cm)
#pragma config(Motor,  port2,           rightMotor,    tmotorServoContinuousRotation, openLoop)
#pragma config(Motor,  port3,           leftMotor,     tmotorServoContinuousRotation, openLoop, reversed)
#pragma config(Motor,  port4,           armMotor,      tmotorServoContinuousRotation, openLoop)
#pragma config(Motor,  port5,           clawMotor,     tmotorServoContinuousRotation, openLoop)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

/*----------------------------------------------------------------------------------------------------*\
|*                             	             - Verkefni 6 -                                           *|
|*                                                                                                    *|
|*  This program uses 3 line followers to track and follow a dark line on a light surface.            *|
|*  At the end of the line, the robot should grab a glass, turn around and return it to the start.    *|
|*                                                                                                    *|
\*-----------------------------------------------------------------------------------------------4246-*/
#include "headers/stop.h"
#include "functions/stop.inc"
#include "headers/motor.h"
#include "functions/motor.inc"
#include "headers/gyro.h"
#include "functions/gyro.inc"
#include "headers/claw.h"
#include "functions/claw.inc"

#define POWER FULL_POWER / 2
#define LOW_POWER POWER / 4

#define RIGHT_SENSOR 1
#define CENTER_SENSOR 0
#define LEFT_SENSOR -1

void findLine(int lastSensorNo, int threshold) {
    if (lastSensorNo == RIGHT_SENSOR) {
        // Steer right until right line follower is on dark again
        while (SensorValue(lineFollowerRIGHT) < threshold) {
            motor[leftMotor]  = POWER;
            motor[rightMotor] = LOW_POWER;
        }
    }
    else if (lastSensorNo == LEFT_SENSOR) {
        while (SensorValue(lineFollowerLEFT) < threshold) {
            motor[leftMotor]  = LOW_POWER;
            motor[rightMotor] = POWER;
        }
    }
    // Center
    else {
    }
    stopMotors();
}

//+++++++++++++++++++++++++++++++++++++++++++++| MAIN |+++++++++++++++++++++++++++++++++++++++++++++++
task main()
{
    StartTask(watchForStop);  // Watch for stop button presses
    wait1Msec(2000);

    const int threshold = 2520;  // Found by adding sensor values for dark and light together and dividing by 2
    int sawLineLast;
    bool foundGlass = false;  // Has the robot found and grabbed the glass?

    // Start with claw open
    openClaw();
    while (true) {
        const int rightValue = SensorValue(lineFollowerRIGHT);
        const int centerValue = SensorValue(lineFollowerCENTER);
        const int leftValue = SensorValue(lineFollowerLEFT);

        int sensorsOnLine = 0;
        // Show sensor values on LCD
        // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -+
        displayLCDCenteredString(0, "LEFT  CNTR  RGHT");        //            |
        displayLCDPos(1, 0);                                    //            |
        displayNextLCDNumber(SensorValue(lineFollowerLEFT));    //            |
        displayLCDPos(1, 6);                                    //            |
        displayNextLCDNumber(SensorValue(lineFollowerCENTER));  //            |
        displayLCDPos(1, 12);                                   //  L  C  R   |
        displayNextLCDNumber(SensorValue(lineFollowerRIGHT));   //  x  x  x   |
        // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -+

        // If right sensor sees dark, counter-steer right
        if (rightValue > threshold) {
            motor[leftMotor]  = POWER;
            motor[rightMotor] = LOW_POWER;
            // Keep track of which sensor has the highest value in order to find line if robot goes off track
            if (rightValue > centerValue && rightValue > leftValue) {
                sawLineLast = RIGHT_SENSOR;
            }
            sensorsOnLine++;
        }
        // If center sensor sees dark, go straight
        if (centerValue > threshold) {
            motor[leftMotor]  = POWER;
            motor[rightMotor] = POWER;
            if (centerValue > rightValue && centerValue > leftValue) {
                sawLineLast = CENTER_SENSOR;
            }
            sensorsOnLine++;
        }
        // If left sensor sees dark, counter-steer left
        if (leftValue > threshold) {
            motor[leftMotor]  = LOW_POWER;
            motor[rightMotor] = POWER;
            if (leftValue > centerValue && leftValue > rightValue) {
                sawLineLast = LEFT_SENSOR;
            }
            sensorsOnLine++;
        }
        // If no sensors saw line, find it
        if (sensorsOnLine == 0) {
            stopMotors();
            findLine(sawLineLast, threshold);
        }

        int sonarValue = SensorValue(sonar);
        // If sonar sensor detects bottle, stop, grab glass and turn around
        if (sonarValue <= 20 && sonarValue != -1 && !foundGlass) {
            foundGlass = true;
            stopMotors();
            StartTask(closeClaw);
            StartTask(liftArm);
            wait1Msec(1000);
            gyroTurn(1800);  // Turn 180 degrees
            wait1Msec(500);
        }
        // If sonar sees box within 25 cm, robot has gone all the way back and should release glass
        if (foundGlass && sonarValue <= 25 && sonarValue != -1) {
            writeDebugStreamLine("Reached end, sonar value %d", sonarValue);
            stopMotors();
            StopTask(closeClaw);
            StopTask(liftArm);
            openClaw();
            break;
        }
    }
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
```

## Myndbönd

### Myndband 1 (vélmenni sækir glas og keyrir með það til baka)

{% include youtube.html id='bNHMWKoBqKA' %}

### Myndband 2 (vélmenni keyrir brautina, grípur glas, lyftir armi en stoppar of snemma því það telur sig hafa séð eitthvað í vegi sér)

{% include youtube.html id='HAUhfbsJN2k' %}

## Útkoma

Eins og má sjá í myndböndunum hér að ofan fékkst ekki fullkomin lausn á þessari þraut. Við vorum þó ansi nálægt því. Við teljum að kóðinn okkar sé alveg fullbúinn og leysi verkefnið en af einhverjum ástæðum vill vélmennið stoppa á leiðinni til baka, ýmist rétt eftir 180° snúninginn eða seinna. Þetta gerist vegna þess að sónarneminn sér eða þykist sjá einhvern hlut innan við 25 cm frá sér, sem á ekki að vera raunin.

Við miðum við það að sjái sónarneminn eitthvað í innan við 25 cm radíusi frá sér sé það kassi sem við settum við byrjun brautarinnar, en þar á vélmennið að stoppa endanlega og skilja glasið eftir. Þetta gerðum við í stað þess að miða við límbandsrönd á endanum því sú lausn gekk út á að vélmennið myndi stoppa ef allir þrír line followers sæju svart, kemur því miður fyrir þegar vélmennið er að keyra venjulega og því stoppaði það áður en það var komið langt áleiðis á brautinni.

Það sést í það minnsta greinilega í þessum myndböndum að við komumst mjög nálægt því að leysa þrautina algjörlega. Í raun urðu mestar framfarir í tímanum 6. desember, síðasta tíma annarinnar, þegar við snerum line follower-skynjurunum við svo þeir væru framar á vélmenninu, auk þess sem við færðum sónarnemann í miðju vélmennisins svo hann gæti séð glasið. Þá loksins tókst okkur að láta vélmennið elta línuna almennilega, en upp að því hafði það verið tregt til þess.
